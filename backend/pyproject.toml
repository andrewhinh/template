[project]
# Support Python 3.10+.
requires-python = ">=3.10"

[tool.ruff]
# Only check selected error codes.
select = ["ANN", "B", "B9", "C", "D", "E", "F", "I", "S", "W"]
# Allow lines to be as long as 120.
line-length = 120
# Codes to ignore.
ignore = [
    "E203", "E402", "E501",  # whitespace, import, line length
    "S101", "S113", "S311", "S105",  # assert removed in bytecode, no request timeout, pRNG not secure, hardcoded password
    "ANN", "ANN002", "ANN003", "ANN101", "ANN102", "ANN202",  # ignore all for now, but always ignore some
    "D100", "D102", "D103", "D104", "D105",  # missing docstrings
    "D200", "D205", "D400", "D401",  # whitespace issues and first line content
]

[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 12.
max-complexity = 12

[tool.ruff.lint.pydocstyle]
# Use the numpy convention for docstrings.
convention = "numpy"

[tool.ruff.lint.flake8-annotations]
# Allow un-annotated Nones in returns.
suppress-none-returning = true
# Allow init to have no return annotation.
mypy-init-return = true

[tool.ruff.per-file-ignores]
# ignore unused imports in __init__.py
"*/__init__.py" = ["F401", "I"]
# ignore data files in data/
"*/data/*.py" = ["F", "I"]
# ignore hardcoded passwords and assert statements in users.py
"*/users.py" = ["B008", "S106"]
